This version of ALE is only slightly modified as described here.
It was modified such that base qualities can be higher than 62.
As far as I can tell, it does not change results of datasets that do not require this.
I encountered this need when messing around with some MinION data where base qualities went up to 93.

To install do:
make clean
make


ALENANO -- modifications only in two files (ALEhelper.c and ALEhelper.h)

I needed to modify lines of src/ALEhelper.c before doing 'make'
    97	    //if (idx < 0 || idx >= 63 )
    99	    assert(idx >= 0 && idx < 63);
   104	    //if (idx < 0 || idx >= 63 )
   106	    assert(idx >= 0 && idx < 63);
   111	    if (idx < 0 || idx >= 63 )
   113	    assert(idx >= 0 && idx < 63);

To
    97	    //if (idx < 0 || idx >= 100 )
    99	    assert(idx >= 0 && idx < 100);
   104	    //if (idx < 0 || idx >= 100 )
   106	    assert(idx >= 0 && idx < 100);
   111	    if (idx < 0 || idx >= 100 )
   113	    assert(idx >= 0 && idx < 100);

i.e. 62 as highest base qual needs to be bumped to 99 -- or 63->100


I then needed to mofify these arrays in ALEhelper.c
static double QtoP[63] = {0.25,0.25,0.36904265552,0.498812766373,0.601892829447,0.683772233983,0.748811356849,0.800473768503,0.841510680754,0.874107458821,0.9,0.920567176528,0.936904265552,0.949881276637,0.960189282945,0.968377223398,0.974881135685,0.98004737685,0.984151068075,0.987410745882,0.99,0.992056717653,0.993690426555,0.994988127664,0.996018928294,0.99683772234,0.997488113568,0.998004737685,0.998415106808,0.998741074588,0.999,0.999205671765,0.999369042656,0.999498812766,0.999601892829,0.999683772234,0.999748811357,0.999800473769,0.999841510681,0.999874107459,0.9999,0.999920567177,0.999936904266,0.999949881277,0.999960189283,0.999968377223,0.999974881136,0.999980047377,0.999984151068,0.999987410746,0.99999,0.999992056718,0.999993690427,0.999994988128,0.999996018928,0.999996837722,0.999997488114,0.999998004738,0.999998415107,0.999998741075,0.999999,0.999999205672,0.999999369043};
static double QtoLogP[63] = {-1.386294361,-1.386294361,-0.996843044007323,-0.695524471331768,-0.507675873695919,-0.380130408066409,-0.289268187201664,-0.222551515972973,-0.172556572913703,-0.134551960288297,-0.105360515657826,-0.0827653026686952,-0.0651741731994102,-0.0514182741582494,-0.0406248442212775,-0.0321335740234123,-0.0254397275341249,-0.0201543647615499,-0.0159758692470951,-0.0126691702086946,-0.0100503358535015,-0.00797499827826794,-0.00632956293131057,-0.00502447389071099,-0.00398901726687351,-0.0031672882259884,-0.00251504651167362,-0.0019972555025822,-0.00158615046381827,-0.00125971852431254,-0.00100050033358353,-0.000794643880834491,-0.000631156481354146,-0.000501312870301668,-0.000398186436697967,-0.000316277776543464,-0.000251220196151159,-0.000199546139006532,-0.000158501879759277,-0.000125900466131129,-0.000100005000333347,-7.94359779538046e-05,-6.30977246195429e-05,-5.01199789851444e-05,-3.9811509467615e-05,-3.16232770105271e-05,-2.51191794839762e-05,-1.99528220562603e-05,-1.58490575956675e-05,-1.25893332453737e-05,-1.00000500002878e-05,-7.94331354807621e-06,-6.30959290540238e-06,-5.01188455944388e-06,-3.98107992443596e-06,-3.16228300002451e-06,-2.51188915476935e-06,-1.99526399049202e-06,-1.58489425589492e-06,-1.25892579247174e-06,-1.00000050002909e-06,-7.94328315520852e-07,-6.30957199034177e-07};
//static double QtoLogPMiss[63] = {-1.673976434,-1.673976434,-1.84681137972,-2.07706988902,-2.30732839832,-2.53758690762,-2.76784541692,-2.99810392622,-3.22836243552,-3.45862094482,-3.68887945411,-3.91913796342,-4.14939647271,-4.37965498201,-4.60991349132,-4.8401720006,-5.07043050991,-5.30068901919,-5.53094752848,-5.7612060378,-5.99146454711,-6.22172305644,-6.45198156568,-6.68224007506,-6.91249858419,-7.14275709366,-7.37301560271,-7.60327411219,-7.83353262179,-8.06379113064,-8.2940496401,-8.52430814905,-8.75456665946,-8.98482516726,-9.21508367618,-9.44534218665,-9.6756006965,-9.90585920769,-10.1361177161,-10.3663762252,-10.5966347331,-10.8268932483,-11.0571517588,-11.2874102682,-11.5176687717,-11.747927267,-11.9781858014,-12.2084443057,-12.4387028027,-12.6689613262,-12.8992198261,-13.1294783791,-13.3597369152,-13.5899954211,-13.8202537893,-14.0505122651,-14.2807710537,-14.5110295491,-14.741288022,-14.9715467369,-15.2018049191,-15.4320637238,-15.6623224837};
static double QtoLogPMiss[63] = {-1.673976434,-1.673976434,-1.45736006261,-1.38629999923,-1.42870991089,-1.53142295456,-1.670819243,-1.83436108107,-2.01462464731,-2.20687854399,-2.40794560865,-2.61560890497,-2.82827628479,-3.04477889505,-3.26424397442,-3.4860112135,-3.70957587633,-3.93454902284,-4.16062903661,-4.38758084689,-4.61522052184,-4.8434036936,-5.07201676749,-5.30097018783,-5.53019324034,-5.75963002076,-5.9892362881,-6.21897700657,-6.44882441114,-6.67875648804,-6.90875577932,-7.13880843182,-7.36890345482,-7.59903211901,-7.82918750149,-8.05936410331,-8.28955755558,-8.51976439271,-8.74998185681,-8.98020776457,-9.21044037698,-9.4406783232,-9.6709204954,-9.90116602709,-10.1314142221,-10.3616645292,-10.5919165595,-10.8221698974,-11.0524242907,-11.2826795544,-11.512935465,-11.7431919613,-11.9734488637,-12.2037060719,-12.4339634093,-12.6642210663,-12.8944792045,-13.1247371832,-13.3549952457,-13.5852536347,-13.8155115579,-14.045770157,-14.2760287535};

Need to make the arrays stretch up to 100 instead of 63...
QtoP = 1-10**(-q/10.0)
QtoLogP = log(1-10**(-q/10.0))
QtoLogPMiss = log((1-p)*p) = log((1-10**(-q/10.0))*10**(-q/10.0))
python -c "from math import log; print [1-10**(-q/10.0) for q in range(2,100)]"
python -c "from math import log; print [log(1-10**(-q/10.0)) for q in range(2,100)]"
python -c "from math import log; print [log((1-10**(-q/10.0))*10**(-q/10.0)) for q in range(2,100)]"

note -- the first 2 (0 and 1) are hard set --- notice the arrays...
 
IN ADDITION to expanding the arrays in ALEhelper.h -- need to make sure to do this as well as:
static double QtoP[63] --> static double QtoP[100] 
static double QtoLogP[63] --> static double QtoLogP[100]
static double QtoLogPMiss[63] --> static double QtoLogPMiss[100]
